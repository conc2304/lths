# Build and push docker image to ACR, and deploy develop branch to Azure Web Apps after a PR is merged to develop branch.

on:
  push:
    branches:
      - develop

jobs:
  build-push-deploy-dev:
    runs-on: ubuntu-22.04

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setting environment variables
        id: set-env-vars-step
        run: |
          echo "k8s_namespace=dev" >> $GITHUB_OUTPUT
          echo "full_image_name=${{ secrets.ACR_REGISTRY }}/mms-dev:latest" >> $GITHUB_OUTPUT
          echo "aks_cluster_name=${{ secrets.AKS_CLUSTER_NAME_DEV }}" >> $GITHUB_OUTPUT
          echo "aks_resource_group=${{ secrets.AKS_RESOURCE_GROUP_DEV }}" >> $GITHUB_OUTPUT
          echo "mok_api_key=${{ secrets.MMS_DEV_API_KEY }}" >> $GITHUB_OUTPUT

      - name: Show environment variables
        run: |
          echo ${{ steps.set-env-vars-step.outputs.k8s_namespace }}
          echo ${{ steps.set-env-vars-step.outputs.full_image_name }}
          echo ${{ steps.set-env-vars-step.outputs.aks_cluster_name }}
          echo ${{ steps.set-env-vars-step.outputs.aks_resource_group }}
          echo ${{ steps.set-env-vars-step.outputs.mok_api_key }}

      - name: Get current date in ISO format
        id: date
        run: echo "date=$(date -u +'utc-%Y%m%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Show Azure CLI version
        run: az -v

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.25.6" # default is latest stable
        id: install

      - name: Set AKS context
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ steps.set-env-vars-step.outputs.aks_resource_group }}
          cluster-name: ${{ steps.set-env-vars-step.outputs.aks_cluster_name }}
        id: login

      - name: Docker login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Renaming the "latest" image to "${{ steps.date.outputs.date }}"
        continue-on-error: true
        run: |
          docker pull ${{ secrets.ACR_REGISTRY }}/mms-dev:latest
          docker tag ${{ secrets.ACR_REGISTRY }}/mms-dev:latest ${{ secrets.ACR_REGISTRY }}/mms-dev:${{ steps.date.outputs.date }}
          docker push ${{ secrets.ACR_REGISTRY }}/mms-dev:${{ steps.date.outputs.date }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2

      # Important: The building arguments "build-args" below need to be declared in the Dockerfile as both ARG and ENV
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64 #,linux/arm64
          file: apps/mms/docker/Dockerfile
          push: true
          tags: ${{ steps.set-env-vars-step.outputs.full_image_name }}
          no-cache: true
          build-args: |
            "NX_PUBLIC_HOST_PROTOCOL=https"
            "NX_PUBLIC_API_HOST_DOMAIN=mok-dev-k8s.briteliteimmersive.io"
            "NX_PUBLIC_WEB_ENV=dev"
            "NX_PUBLIC_API_KEY=${{ steps.set-env-vars-step.outputs.mok_api_key }}"
            "BASE_PATH=./mms/"
            "GITHUB_BRANCH=develop"

      - name: Redeploy the App to AKS
        run: kubectl rollout restart deployment mms-app -n ${{ steps.set-env-vars-step.outputs.k8s_namespace }}

      - name: Post a message to Slack - lths-deployments
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"The DEV environment is being updated with the latest version of the MMS develop branch. Commit ID: ${{ github.sha }}"}' \
            ${{ secrets.SLACK_WEBHOOK_URL_DEPLOYMENTS_CH}}
